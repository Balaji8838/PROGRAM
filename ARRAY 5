ARRAY REVERSE
import java.util.*;
public class Main {
	public static void main(String args[]) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int arr[]=new int[n+1];
		for(int i=0; i<n; i++) {
			arr[i]=sc.nextInt();
		}
		int pos=sc.nextInt();
		int value=sc.nextInt();
		for(int i=n-1; i>pos-2; i--)
		{
			arr[i+1]=arr[i];
		}
		arr[pos-1]=value;
		n=n+1;
		for(int j=0; j<n; j++)
		{
			System.out.println(arr[j]);
		}
	}
}

DUPLICATEE ARRAY
import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int n=s.nextInt();
	    int a[]=new int[n];
	    for(int i=0;i<n;i++)
	    a[i]=s.nextInt();
	    {
	        for(int i=0;i<n;i++)
	        {
	            for(int j=i+1;j<n;j++){
	                if(a[i]==a[j]){
	                    a[j]=a[n-1];
	                    --n;
	                    --j;
	                    
	                }
	            }
	        }
	    }
	    for(int i=0;i<n;i++)
	        {
	            System.out.println("  "+a[i]);
	        }
	}
}

CONTAIN DUPLICATE

class Solution {
    public boolean containsDuplicate(int[] nums) {
        Arrays.sort(nums); 
        for (int i = 0; i < nums.length - 1; i++) {
                if (nums[i] == nums[i+1]) {
                    return true;
                }
        }
        return false;
    }
}

ANAGRAM ARRAY
class Solution {
    public boolean isAnagram(String s, String t) {
      int arr[]=new int[s.length()];
      if(s.length()!=t.length()){
        return false;
      }
       int count=0;
      for(int i=0;i<s.length();i++){
        for(int j=0;j<t.length();j++){
            if(s.charAt(i)==t.charAt(j) && arr[j]==0){
                count+=1;
                arr[j]=1;
                break;
            }
        }
      }
      if(count==s.length()){
    return true;
      }

      return false;
    }
}
SUM OF TWO ARRAY

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int n = nums.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                if (nums[i] + nums[j] == target) {
                    return new int[]{i, j};
                }
            }
        }
        
    }
}
